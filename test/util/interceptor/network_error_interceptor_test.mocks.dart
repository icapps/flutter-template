// Mocks generated by Mockito 5.4.0 from annotations
// in flutter_template/test/util/interceptor/network_error_interceptor_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:connectivity_plus/connectivity_plus.dart' as _i4;
import 'package:icapps_architecture/src/util/connectivity/connectivity.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ConnectivityHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityHelper extends _i1.Mock
    implements _i2.ConnectivityHelper {
  MockConnectivityHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> hasConnection() => (super.noSuchMethod(
        Invocation.method(
          #hasConnection,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Stream<bool> monitorConnection() => (super.noSuchMethod(
        Invocation.method(
          #monitorConnection,
          [],
        ),
        returnValue: _i3.Stream<bool>.empty(),
      ) as _i3.Stream<bool>);
  @override
  _i3.Future<_i4.ConnectivityResult> getConnectivityResult() =>
      (super.noSuchMethod(
        Invocation.method(
          #getConnectivityResult,
          [],
        ),
        returnValue: _i3.Future<_i4.ConnectivityResult>.value(
            _i4.ConnectivityResult.bluetooth),
      ) as _i3.Future<_i4.ConnectivityResult>);
}
