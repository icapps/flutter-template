// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_template/test/viewmodel/debug/debug_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:drift/drift.dart' as _i4;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i5;
import 'package:flutter/material.dart' as _i1;
import 'package:flutter_template/database/flutter_template_database.dart'
    as _i3;
import 'package:flutter_template/model/snackbar/snackbar_data.dart' as _i8;
import 'package:flutter_template/navigator/main_navigator.dart' as _i7;
import 'package:flutter_template/repository/debug/debug_repository.dart' as _i9;
import 'package:flutter_template/repository/shared_prefs/local/local_storage.dart'
    as _i10;
import 'package:mockito/mockito.dart' as _i2;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$DbTodoTableTable_1 extends _i2.SmartFake
    implements _i3.$DbTodoTableTable {
  _Fake$DbTodoTableTable_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedDatabase_2 extends _i2.SmartFake
    implements _i4.GeneratedDatabase {
  _FakeGeneratedDatabase_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_3 extends _i2.SmartFake
    implements _i4.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrationStrategy_4 extends _i2.SmartFake
    implements _i4.MigrationStrategy {
  _FakeMigrationStrategy_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryUpdateRules_5 extends _i2.SmartFake
    implements _i4.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_6 extends _i2.SmartFake
    implements _i4.DatabaseConnection {
  _FakeDatabaseConnection_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_7 extends _i2.SmartFake implements _i4.QueryExecutor {
  _FakeQueryExecutor_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_8 extends _i2.SmartFake
    implements _i5.StreamQueryStore {
  _FakeStreamQueryStore_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_9 extends _i2.SmartFake
    implements _i4.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrator_10 extends _i2.SmartFake implements _i4.Migrator {
  _FakeMigrator_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_11<T1> extends _i2.SmartFake implements _i6.Future<T1> {
  _FakeFuture_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_12<T1 extends _i4.Table, D1> extends _i2.SmartFake
    implements _i4.InsertStatement<T1, D1> {
  _FakeInsertStatement_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_13<T extends _i4.Table, D> extends _i2.SmartFake
    implements _i4.UpdateStatement<T, D> {
  _FakeUpdateStatement_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_14<T1 extends _i4.HasResultSet, D>
    extends _i2.SmartFake implements _i4.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_15<FirstT extends _i4.HasResultSet, FirstD>
    extends _i2.SmartFake implements _i4.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_16<T1 extends _i4.Table, D1> extends _i2.SmartFake
    implements _i4.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_17<T> extends _i2.SmartFake implements _i4.Selectable<T> {
  _FakeSelectable_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_18 extends _i2.SmartFake
    implements _i4.GenerationContext {
  _FakeGenerationContext_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MainNavigator].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainNavigator extends _i2.Mock implements _i7.MainNavigator {
  MockMainNavigator() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i1.GlobalKey<_i1.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_0<_i1.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i1.GlobalKey<_i1.NavigatorState>);

  @override
  _i6.Future<void> goToDatabase(_i4.GeneratedDatabase? db) =>
      (super.noSuchMethod(
        Invocation.method(
          #goToDatabase,
          [db],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void showErrorWithLocaleKey({
    required String? messageKey,
    String? titleKey,
    List<dynamic>? args,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showErrorWithLocaleKey,
          [],
          {
            #messageKey: messageKey,
            #titleKey: titleKey,
            #args: args,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #showError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> showCustomSnackBar({
    required String? message,
    String? title,
    _i8.SnackBarStyle? style = _i8.SnackBarStyle.neutral,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSnackBar,
          [],
          {
            #message: message,
            #title: title,
            #style: style,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i1.Route<dynamic>? onGenerateRoute(_i1.RouteSettings? settings) =>
      (super.noSuchMethod(Invocation.method(
        #onGenerateRoute,
        [settings],
      )) as _i1.Route<dynamic>?);

  @override
  void goToHomeScreen({_i1.Key? key}) => super.noSuchMethod(
        Invocation.method(
          #goToHomeScreen,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goToSplashScreen({_i1.Key? key}) => super.noSuchMethod(
        Invocation.method(
          #goToSplashScreen,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> goToLicenseScreen({_i1.Key? key}) => (super.noSuchMethod(
        Invocation.method(
          #goToLicenseScreen,
          [],
          {#key: key},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> goToTodoAddScreen({_i1.Key? key}) => (super.noSuchMethod(
        Invocation.method(
          #goToTodoAddScreen,
          [],
          {#key: key},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> goToAnalyticsPermissionScreen({_i1.Key? key}) =>
      (super.noSuchMethod(
        Invocation.method(
          #goToAnalyticsPermissionScreen,
          [],
          {#key: key},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void goToLoginScreen({_i1.Key? key}) => super.noSuchMethod(
        Invocation.method(
          #goToLoginScreen,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> goToThemeModeSelectorScreen({_i1.Key? key}) =>
      (super.noSuchMethod(
        Invocation.method(
          #goToThemeModeSelectorScreen,
          [],
          {#key: key},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> goToDebugPlatformSelectorScreen({_i1.Key? key}) =>
      (super.noSuchMethod(
        Invocation.method(
          #goToDebugPlatformSelectorScreen,
          [],
          {#key: key},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> goToDebugScreen({_i1.Key? key}) => (super.noSuchMethod(
        Invocation.method(
          #goToDebugScreen,
          [],
          {#key: key},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> goToLogsScreen({_i1.Key? key}) => (super.noSuchMethod(
        Invocation.method(
          #goToLogsScreen,
          [],
          {#key: key},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> goToLogDetailScreen({
    required String? date,
    _i1.Key? key,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #goToLogDetailScreen,
          [],
          {
            #date: date,
            #key: key,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void goBack() => super.noSuchMethod(
        Invocation.method(
          #goBack,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goBackWithResult<T>({T? result}) => super.noSuchMethod(
        Invocation.method(
          #goBackWithResult,
          [],
          {#result: result},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popUntil(bool Function(_i1.Route<dynamic>)? predicate) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goBackTo(String? routeName) => super.noSuchMethod(
        Invocation.method(
          #goBackTo,
          [routeName],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<T?> showCustomDialog<T>({_i1.Widget? widget}) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {#widget: widget},
        ),
        returnValue: _i6.Future<T?>.value(),
      ) as _i6.Future<T?>);

  @override
  _i6.Future<T?> showBottomSheet<T>({_i1.Widget? widget}) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {#widget: widget},
        ),
        returnValue: _i6.Future<T?>.value(),
      ) as _i6.Future<T?>);
}

/// A class which mocks [DebugRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDebugRepository extends _i2.Mock implements _i9.DebugRepository {
  MockDebugRepository() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> saveSlowAnimations({required bool? enabled}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSlowAnimations,
          [],
          {#enabled: enabled},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  bool isSlowAnimationsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isSlowAnimationsEnabled,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i6.Future<void> saveSelectedPlatform(String? selectedPlatform) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSelectedPlatform,
          [selectedPlatform],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [LocalStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorage extends _i2.Mock implements _i10.LocalStorage {
  MockLocalStorage() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> checkForNewInstallation() => (super.noSuchMethod(
        Invocation.method(
          #checkForNewInstallation,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateThemeMode(_i1.ThemeMode? themeMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateThemeMode,
          [themeMode],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateHasAnalyticsPermission(bool? permissionGranted) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateHasAnalyticsPermission,
          [permissionGranted],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [FlutterTemplateDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterTemplateDatabase extends _i2.Mock
    implements _i3.FlutterTemplateDatabase {
  MockFlutterTemplateDatabase() {
    _i2.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion => (super.noSuchMethod(
        Invocation.getter(#schemaVersion),
        returnValue: 0,
      ) as int);

  @override
  _i3.$DbTodoTableTable get dbTodoTable => (super.noSuchMethod(
        Invocation.getter(#dbTodoTable),
        returnValue: _Fake$DbTodoTableTable_1(
          this,
          Invocation.getter(#dbTodoTable),
        ),
      ) as _i3.$DbTodoTableTable);

  @override
  get managers => throw UnsupportedError(
      r'"managers" cannot be used without a mockito fallback generator.');

  @override
  Iterable<_i4.TableInfo<_i4.Table, Object?>> get allTables =>
      (super.noSuchMethod(
        Invocation.getter(#allTables),
        returnValue: <_i4.TableInfo<_i4.Table, Object?>>[],
      ) as Iterable<_i4.TableInfo<_i4.Table, Object?>>);

  @override
  List<_i4.DatabaseSchemaEntity> get allSchemaEntities => (super.noSuchMethod(
        Invocation.getter(#allSchemaEntities),
        returnValue: <_i4.DatabaseSchemaEntity>[],
      ) as List<_i4.DatabaseSchemaEntity>);

  @override
  _i4.GeneratedDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGeneratedDatabase_2(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i4.GeneratedDatabase);

  @override
  _i4.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_3(
          this,
          Invocation.getter(#options),
        ),
      ) as _i4.DriftDatabaseOptions);

  @override
  _i4.MigrationStrategy get migration => (super.noSuchMethod(
        Invocation.getter(#migration),
        returnValue: _FakeMigrationStrategy_4(
          this,
          Invocation.getter(#migration),
        ),
      ) as _i4.MigrationStrategy);

  @override
  _i4.StreamQueryUpdateRules get streamUpdateRules => (super.noSuchMethod(
        Invocation.getter(#streamUpdateRules),
        returnValue: _FakeStreamQueryUpdateRules_5(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
      ) as _i4.StreamQueryUpdateRules);

  @override
  _i4.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_6(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i4.DatabaseConnection);

  @override
  _i4.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i11.dummyValue<_i4.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i4.SqlTypes);

  @override
  _i4.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_7(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i4.QueryExecutor);

  @override
  _i5.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_8(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i5.StreamQueryStore);

  @override
  _i4.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_9(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i4.DatabaseConnectionUser);

  @override
  _i6.Future<void> deleteAllData() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllData,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i4.Migrator createMigrator() => (super.noSuchMethod(
        Invocation.method(
          #createMigrator,
          [],
        ),
        returnValue: _FakeMigrator_10(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
      ) as _i4.Migrator);

  @override
  _i6.Future<void> beforeOpen(
    _i4.QueryExecutor? executor,
    _i4.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #beforeOpen,
          [
            executor,
            details,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Stream<List<Map<String, Object?>>> createStream(
          _i5.QueryStreamFetcher? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i6.Stream<List<Map<String, Object?>>>.empty(),
      ) as _i6.Stream<List<Map<String, Object?>>>);

  @override
  T alias<T, D>(
    _i4.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i11.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i4.TableInfo<_i4.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i4.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Stream<Set<_i4.TableUpdate>> tableUpdates(
          [_i4.TableUpdateQuery? query = const _i4.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i6.Stream<Set<_i4.TableUpdate>>.empty(),
      ) as _i6.Stream<Set<_i4.TableUpdate>>);

  @override
  _i6.Future<T> doWhenOpened<T>(
          _i6.FutureOr<T> Function(_i4.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i11.ifNotNull(
              _i11.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_11<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i6.Future<T>);

  @override
  _i4.InsertStatement<T, D> into<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_12<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i4.InsertStatement<T, D>);

  @override
  _i4.UpdateStatement<Tbl, R> update<Tbl extends _i4.Table, R>(
          _i4.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_13<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i4.UpdateStatement<Tbl, R>);

  @override
  _i4.SimpleSelectStatement<T, R> select<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_14<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.SimpleSelectStatement<T, R>);

  @override
  _i4.JoinedSelectStatement<T, R> selectOnly<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_15<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.JoinedSelectStatement<T, R>);

  @override
  _i4.DeleteStatement<T, D> delete<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_16<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i4.DeleteStatement<T, D>);

  @override
  _i6.Future<int> customUpdate(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> customInsert(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<List<_i4.QueryRow>> customWriteReturning(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i6.Future<List<_i4.QueryRow>>.value(<_i4.QueryRow>[]),
      ) as _i6.Future<List<_i4.QueryRow>>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelect(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_17<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelectQuery(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_17<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i6.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<T> transaction<T>(
    _i6.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i11.ifNotNull(
              _i11.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i6.Future<T>.value(v),
            ) ??
            _FakeFuture_11<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i6.Future<T>);

  @override
  _i6.Future<void> batch(_i6.FutureOr<void> Function(_i4.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i4.GenerationContext $write(
    _i4.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_18(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  _i4.GenerationContext $writeInsertable(
    _i4.TableInfo<_i4.Table, dynamic>? table,
    _i4.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_18(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);
}
