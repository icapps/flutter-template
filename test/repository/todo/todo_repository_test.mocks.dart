// Mocks generated by Mockito 5.4.0 from annotations
// in flutter_template/test/repository/todo/todo_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_template/database/todo/todo_dao_storage.dart' as _i5;
import 'package:flutter_template/model/webservice/todo/todo.dart' as _i4;
import 'package:flutter_template/webservice/todo/todo_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TodoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoService extends _i1.Mock implements _i2.TodoService {
  MockTodoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Todo>> getTodos() => (super.noSuchMethod(
        Invocation.method(
          #getTodos,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Todo>>.value(<_i4.Todo>[]),
      ) as _i3.Future<List<_i4.Todo>>);
}

/// A class which mocks [TodoDaoStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoDaoStorage extends _i1.Mock implements _i5.TodoDaoStorage {
  MockTodoDaoStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i4.Todo>> getAllTodosStream() => (super.noSuchMethod(
        Invocation.method(
          #getAllTodosStream,
          [],
        ),
        returnValue: _i3.Stream<List<_i4.Todo>>.empty(),
      ) as _i3.Stream<List<_i4.Todo>>);
  @override
  _i3.Future<List<_i4.Todo>> getAllTodos() => (super.noSuchMethod(
        Invocation.method(
          #getAllTodos,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Todo>>.value(<_i4.Todo>[]),
      ) as _i3.Future<List<_i4.Todo>>);
  @override
  _i3.Future<void> createTodo(String? todo) => (super.noSuchMethod(
        Invocation.method(
          #createTodo,
          [todo],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> createTodoWithValue(_i4.Todo? todo) => (super.noSuchMethod(
        Invocation.method(
          #createTodoWithValue,
          [todo],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> updateTodo({
    required int? id,
    required bool? completed,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [],
          {
            #id: id,
            #completed: completed,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
